#%RAML 0.8
---
title: OpenLMIS Requisition API
version: "@version@"
baseUri: "@baseUrl@"

documentation:
    - title: Getting Started
      content: Welcome to the OpenLMIS requisition-service documentation.

schemas:

  - facilityDto: !include schemas/facilityDto.json

  - facilityOperatorDto: !include schemas/facilityOperatorDto.json

  - facilityTypeDto: !include schemas/facilityTypeDto.json

  - geographicLevelDto: !include schemas/geographicLevelDto.json

  - geographicZoneDto: !include schemas/geographicZoneDto.json

  - orderableProductDto: |
      {    "type": "object",
           "$schema": "http://json-schema.org/draft-03/schema",
           "title": "OrderableProductDto",
           "description": "A single orderableProductDto",
           "properties": {
               "id": { "type": "string", "required": true, "title": "id" },
               "productCode": { "type": "string", "required": true, "title": "code" },
               "name": { "type": "string", "required": true, "title": "name" },
               "programs": {"type": "array", "required": false, "title": "programs", "items": {"type": "object", "$ref": "schemas/productDto.json"}, "uniqueItems": false}
           }
      }

  - processingPeriodDto: !include schemas/processingPeriodDto.json

  - processingScheduleDto: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "ProcessingScheduleDto",
          "description": "A single processingScheduleDto",
          "properties": {
              "id": { "type": "string", "required": true, "title": "id" },
              "code": { "type": "string", "required": true, "title": "code" },
              "description": { "type": "string", "required": true, "title": "description" },
              "modifiedDate": { "type": "string", "required": true, "title": "modifiedDate" },
              "name": { "type": "string", "required": true, "title": "name" }
          }
      }

  - programDto: !include schemas/programDto.json

  - productDto: !include schemas/productDto.json

  - requisition: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "Requisition",
          "description": "A single requisition",
          "properties": {
              "id": { "type": "string", "required": true, "title": "id" },
              "createdDate": { "type": "string", "required": false, "title": "createdDate" },
              "facilityId": { "type": "string", "required": true, "title": "facilityId" },
              "programId": { "type": "string", "required": true, "title": "programId" },
              "processingPeriodId": { "type": "string", "required": true, "title": "processingPeriodId" },
              "supplyingFacilityId" : {"type": "string", "required": false, "title": "supplyingFacilityId"},
              "status": { "type": "string", "required": true, "title": "status" },
              "emergency": { "type": "boolean", "required": false, "title": "emergency" },
              "supervisoryNodeId": { "type": "string", "required": true, "title": "supervisoryNodeId" },
              "requisitionLineItems": { "type": "array", "required": false, "title":"requisitionLineItems", "items": { "type": "object", "$ref":"#/schemas/requisitionLineItem" }, "uniqueItems": false }
          }
      }

  - requisitionDto: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema",
          "title": "RequisitionDto",
          "description": "A single requisitionDto",
          "properties": {
              "id": { "type": "string", "title": "id" },
              "createdDate": {"type": "array", "title": "createdDate", "items": {"type": "integer" }, "uniqueItems": false },
              "facility": { "type": "object", "$ref": "schemas/facilityDto.json", "title": "facility" },
              "program": { "type": "object", "$ref": "schemas/programDto.json", "title": "program" },
              "processingPeriod": { "type": "object", "$ref": "schemas/processingPeriodDto.json", "title": "processingPeriod" },
              "supplyingFacility" : {"type": ["string", "null"], "title": "supplyingFacility"},
              "status": { "type": "string", "title": "status" },
              "emergency": { "type": "boolean", "title": "emergency" },
              "supervisoryNode": { "type": "string", "title": "supervisoryNode" },
              "requisitionLineItems": { "type": "array", "title": "requisitionLineItems", "items": { "type": "object", "$ref":"#/schemas/requisitionLineItemDto" }, "uniqueItems": false }
          },
          "required": ["id", "facility", "program", "processingPeriod", "status", "supervisoryNode"]
      }

  - requisitionDtoArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "#/schemas/requisitionDto" }
      }

  - requisitionLineItem: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "RequisitionLineItem",
          "description": "A single requisitionLineItem",
          "properties": {
              "id": { "type": "string", "required": true, "title": "id" },
              "requisition": { "type": "object", "$ref": "#/schemas/requisition", "required": false, "title": "requisition" },
              "orderableProductId": { "type": "string", "required": true, "title": "orderableProductId" },
              "beginningBalance": { "type": "integer", "required": false, "title": "beginningBalance" },
              "totalReceivedQuantity": { "type": "integer", "required": false, "title": "totalReceivedQuantity" },
              "totalLossesAndAdjustments": { "type": "integer", "required": false, "title": "totalLossesAndAdjustments" },
              "stockOnHand": { "type": "integer", "required": false, "title": "stockOnHand" },
              "requestedQuantity": { "type": "integer", "required": false, "title": "requestedQuantity" },
              "totalConsumedQuantity": { "type": "integer", "required": false, "title": "totalConsumedQuantity" },
              "requestedQuantityExplanation": { "type": "string", "required": false, "title": "requestedQuantityExplanation" },
              "remarks": {"type": "string", "required": true, "title": "remarks" },
              "approvedQuantity": {"type": "integer", "required": true, "title": "approvedQuantity" },
              "total": {"type": "integer", "required": false, "title": "total" },
              "pricePerPack": {"type": "number", "required": false, "title": "pricePerPack" },
              "numberOfNewPatientsAdded": {"type": "number", "required": false, "title": "numberOfNewPatientsAdded" },
              "skipped": {"type": "boolean", "required": false, "title": "boolean" },
              "adjustedConsumption": {"type": "number", "required": false, "title": "adjustedConsumption" },
              "averageConsumption": {"type": "number", "required": false, "title": "averageConsumption" },
              "productCategoryDisplayName": {"type": "string", "required": false, "title": "productCategoryDisplayName" }
          }
      }

  - requisitionLineItemDto: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "RequisitionLineItemDto",
          "description": "A single requisitionLineItemDto",
          "properties": {
              "id": { "type": "string", "required": true, "title": "id" },
              "orderableProduct": { "type": "object", "$ref": "#/schemas/orderableProductDto", "required": true, "title": "orderableProduct" },
              "beginningBalance": { "type": "integer", "required": false, "title": "beginningBalance" },
              "totalReceivedQuantity": { "type": "integer", "required": false, "title": "totalReceivedQuantity" },
              "totalLossesAndAdjustments": { "type": "integer", "required": false, "title": "totalLossesAndAdjustments" },
              "stockOnHand": { "type": "integer", "required": false, "title": "stockOnHand" },
              "requestedQuantity": { "type": "integer", "required": false, "title": "requestedQuantity" },
              "totalConsumedQuantity": { "type": "integer", "required": false, "title": "totalConsumedQuantity" },
              "requestedQuantityExplanation": { "type": "string", "required": false, "title": "requestedQuantityExplanation" },
              "remarks": {"type": "string", "required": true, "title": "remarks" },
              "approvedQuantity": {"type": "integer", "required": true, "title": "approvedQuantity" },
              "total": {"type": "integer", "required": false, "title": "total" },
              "pricePerPack": {"type": "number", "required": false, "title": "pricePerPack" },
              "numberOfNewPatientsAdded": {"type": "number", "required": false, "title": "numberOfNewPatientsAdded" },
              "skipped": {"type": "boolean", "required": false, "title": "skipped" },
              "adjustedConsumption": {"type": "number", "required": false, "title": "adjustedConsumption" },
              "averageConsumption": {"type": "number", "required": false, "title": "averageConsumption" }
          }
      }

  - requisitionTemplate: !include schemas/requisitionTemplate.json

  - requisitionTemplateArray: |
       {
           "type": "array",
           "items": { "type": "object", "$ref": "schemas/requisitionTemplate.json" }
       }

  - convertedRequisitionMap: |
      {
          "type": "array",
          "items": [
              { "type": "object", "$ref": "#/schemas/requisition" },
              { "type": "array", "items": { "type": "object", "$ref": "#/schemas/facility" } }
          ]
      }

  - programDto: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "ProgramDto",
          "description": "A single programDto",
          "properties": {
              "id": { "type": "string", "required": true, "title": "id" },
              "code": { "type": "string", "required": true, "title": "code" },
              "name": { "type": "string", "required": false, "title": "name" },
              "description": { "type": "string", "required": false, "title": "description" },
              "active": { "type": "boolean", "required": false, "title": "active" },
              "periodsSkippable": { "type": "boolean", "required": false, "title": "periodsSkippable" },
              "showNonFullSupplyTab": { "type": "boolean", "required": false, "title": "showNonFullSupplyTab" }
          }
      }

  - configurationSetting: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-03/schema",
          "title": "ConfigurationSetting",
          "description": "A single configurationSetting",
          "properties": {
              "key": { "type": "string", "required": true, "title": "key" },
              "value": { "type": "string", "required": true, "title": "value" }
          }
      }

  - localizedMessage: !include schemas/localizedMessage.json

  - convertToOrderDto: !include schemas/convertToOrderDto.json

  - convertToOrderDtoArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/convertToOrderDto.json" }
      }

  - jasperTemplateDto: !include schemas/jasperTemplateDto.json

  - templateDtoArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/jasperTemplateDto.json" }
      }

  - statusMessage: !include schemas/statusMessage.json

  - statusMessageArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/statusMessage.json" }
      }

traits:
    - secured:
          queryParameters:
              access_token:
                  displayName: access_token
                  description: OAuth2 access token
                  type: string
                  required: true
                  repeat: false
    - paginated:
          queryParameters:
              page:
                  description: The page number which should be displayed. Note that the first page is numbered zero rather than one. Additionally, negative and undefined valued are interpreted as zero.
                  type: integer
                  required: false
                  repeat: false
              size:
                  description: The desired size of each page. This specifies the maximum number of values that should be returned by the server. Zero, undefined, and negative values should result in all possible values being returned.
                  type: integer
                  required: false
                  repeat: false
resourceTypes:
    - collection:
        get:
            is: [ secured ]
            responses:
                200:
                  description: Collection retrieved successfully
                  body:
                      application/json:
                          schema: <<schema>>
                404:
                  description: Collection is empty.
        post:
            is: [ secured ]
            body:
                application/json:
                    schema: <<schema>>
            responses:
                201:
                  description: Item created successfully
                  body:
                      application/json:
                          schema: <<schema>>
    - member:
        get:
            is: [ secured ]
            responses:
                200:
                    body:
                        application/json:
                            schema: <<schema>>
        post:
            is: [ secured ]
            body:
                application/json:
                    schema: <<schema>>
            responses:
                200:
                    body:
                        application/json:
                            schema: <<schema>>
        delete:
            is: [ secured ]
            responses:
                200:

/api:
  /requisitions:
      displayName: Requisition
      /initiate:
          post:
              is: [ secured ]
              description: Initiate requisition.
              queryParameters:
                  program:
                      displayName: program
                      type: string
                      required: true
                      repeat: false
                  facility:
                      displayName: facility
                      type: string
                      required: true
                      repeat: false
                  suggestedPeriod:
                      displayName: suggestedPeriod
                      type: string
                      required: false
                      repeat: false
                  emergency:
                      displayName: emergency
                      type: boolean
                      required: true
                      repeat: false
              responses:
                  "201":
                      body:
                        application/json:
                  "400":
                      body:
                        application/json:
                            schema: localizedMessage
                  "403":
                      body:
                        application/json:
                            schema: localizedMessage
      /submitted:
          get:
              is: [ secured ]
              description: Get all requisitions with submitted status.
              responses:
                  "200":
                      body:
                        application/json:
                  "404":
                  "403":
                      body:
                        application/json:
                            schema: localizedMessage
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: Delete chosen requisition.
              responses:
                  "204":
                  "400":
                      body:
                        application/json:
                          schema: localizedMessage
                  "404":
                      body:
                        application/json:
                          schema: localizedMessage
                  "409":
                  "403":
                      body:
                        application/json:
                            schema: localizedMessage
          get:
              is: [ secured ]
              description: Get chosen requisition.
              responses:
                  "200":
                      body:
                        application/json:
                  "404":
                      body:
                        application/json:
                          schema: localizedMessage
                  "403":
                      body:
                        application/json:
                            schema: localizedMessage
          put:
              is: [ secured ]
              description: Update existing requisition.
              body:
                  application/json:
                    schema: requisitionDto
              responses:
                  "200":
                      body:
                        application/json:
                          schema: requisitionDto
                  "400":
                      body:
                        application/json:
                            schema: localizedMessage
                  "404":
                      body:
                        application/json:
                            schema: localizedMessage
                  "403":
                      body:
                        application/json:
                            schema: localizedMessage
      /{id}/skip:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          put:
              is: [ secured ]
              description: Skip chosen requisition period.
              responses:
                  "200":
                      body:
                        application/json:
                  "400":
                      body:
                        application/json:
                            schema: localizedMessage
                  "403":
                      body:
                        application/json:
                            schema: localizedMessage
                  "404":
                      body:
                        application/json:
                            schema: localizedMessage
      /{id}/reject:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          put:
              is: [ secured ]
              description: Reject requisition which is waiting for approval.
              responses:
                  "200":
                      body:
                        application/json:
                  "400":
                      body:
                        application/json:
                          schema: localizedMessage
                  "404":
                      body:
                        application/json:
                          schema: localizedMessage
      /{id}/submit:
          post:
              is: [ secured ]
              description: Submit earlier initiated requisition.
              responses:
                  "200":
                      body:
                        application/json:
                  "400":
                      body:
                        application/json:
                  "403":
                      body:
                        application/json:
                            schema: localizedMessage
      /{id}/authorize:
          uriParameters:
              id:
                  displayName: requisition Id
                  type: string
                  required: true
                  repeat: false
          post:
              is: [ secured ]
              description: Authorize submitted requisition.
              responses:
                  "200":
                      body:
                        application/json:
                  "400":
                      body:
                        application/json:
                            schema: localizedMessage
                  "404":
                  "403":
                      body:
                        application/json:
                            schema: localizedMessage
      /{id}/print:
          uriParameters:
              id:
                  displayName: requisitionId
                  type: string
                  required: true
                  repeat: false
          get:
              is: [ secured ]
              description: Print requisition to a pdf file.
              responses:
                  200:
                      body:
                        application/pdf:
      /{id}/statusMessages:
          get:
              is: [ secured ]
              description: Get status messages associated with a requisition.
              responses:
                  200:
                      body:
                        application/json:
                          schema: statusMessageArray
      /search:
          get:
              is: [ secured, paginated ]
              description: Find requisitions matching all of provided parameters.
              queryParameters:
                  facility:
                      displayName: facility
                      type: string
                      required: false
                      repeat: false
                  program:
                      displayName: program
                      type: string
                      required: false
                      repeat: false
                  createdDateFrom:
                      displayName: createdDateFrom
                      type: string
                      required: false
                      repeat: false
                  createdDateTo:
                      displayName: createdDateTo
                      type: string
                      required: false
                      repeat: false
                  processingPeriod:
                      displayName: processingPeriod
                      type: string
                      required: false
                      repeat: false
                  supervisoryNode:
                      displayName: supervisoryNode
                      type: string
                      required: false
                      repeat: false
                  requisitionStatus:
                      displayName: supervisoryNode
                      type: string
                      required: false
                      repeat: false
                  emergency:
                      displayName: emergency
                      type: boolean
                      required: false
                      repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                  "400":
                  "500":
      /{id}/approve:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          post:
              is: [ secured ]
              description: Approve specified by id requisition.
              responses:
                  "200":
                      body:
                        application/json:
                  "400":
                      body:
                        application/json:
                            schema: localizedMessage
                  "403":
                      body:
                        application/json:
                            schema: localizedMessage
      /requisitionsForApproval:
          get:
              is: [ secured ]
              description: Get requisitions to approve for right supervisor.
              responses:
                  "200":
                      body:
                        application/json:
                            schema: requisitionDtoArray
                  "500":
      /requisitionsForConvert:
          get:
              is: [ secured ]
              description: Get requisitions to approve for right supervisor.
              queryParameters:
                  filterValue:
                      displayName: filterValue
                      description: This parameter contains filter value.
                      type: string
                      required: false
                      repeat: false
                  filterBy:
                      displayName: filterBy
                      description: This parameter contains field which we are going to filter by.
                        There is four possibilities - facilityCode, facilityName, programName
                        and all
                      type: string
                      required: false
                      repeat: false
                  sortBy:
                      displayName: sortBy
                      description: This parameter contains field which we are going to sort by.
                        There is three possibilities -  facilityCode, facilityName and programName
                      type: string
                      required: false
                      repeat: false
                  descending:
                      displayName: descending
                      description: This parameter contains sorting order. Default it is descending,
                        but if user want to have ascending order there should be false.
                      type: boolean
                      required: false
                      repeat: false
                  pageNumber:
                      displayName: pageNumber
                      description: This parameter defines what page number should be returned. For
                        example if you want to display second page you should set here 2.
                      type: integer
                      required: false
                      repeat: false
                  pageSize:
                      displayName: pageSize
                      description: This parameter defines size of page. If you want to have, for
                        example, ten records per one page you should set here 10.
                      type: integer
                      required: false
                      repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                  "500":
      /convertToOrder:
          post:
              is: [ secured ]
              description: Convert Requisition list to orders.
              body:
                application/json:
                  schema: convertToOrderDtoArray
              responses:
                  "201":
                  "403":
                      body:
                        application/json:
                          schema: localizedMessage
                  "500":

      /periodsForInitiate:
          get:
              is: [ secured ]
              description: Find periods for initiate requisition.
              queryParameters:
                  programId:
                      displayName: program
                      type: string
                      required: true
                      repeat: false
                  facilityId:
                      displayName: facility
                      type: string
                      required: true
                      repeat: false
                  emergency:
                      displayName: emergency
                      type: boolean
                      required: true
                      repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                          schema: processingPeriodDto
                  "400":
                      body:
                        application/json:
                            schema: localizedMessage

  /reports/templates/requisitions:
      displayName: Report Template
      post:
          is: [ secured ]
          description: Add report template to database.
          body:
              multipart/form-data:
                formParameters:
                    file:
                         displayName: Template with .jrxml format
                         type: file
                         required: false
                         repeat: false
                    name:
                         displayName: Name of Template in database
                         type: string
                         required: false
                         repeat: false
                    description:
                         displayName: Description of Template
                         type: string
                         required: false
                         repeat: false
          responses:
                200:
      get:
          is: [ secured ]
          description: Get all templates.
          responses:
              200:
                  body:
                    application/json:
                      schema: templateDtoArray
              404:
                  body:
                    application/json:
                        schema: localizedMessage
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: Delete chosen template.
              responses:
                  204:
                  404:
                      body:
                        application/json:
                            schema: localizedMessage
          get:
              is: [ secured ]
              description: Get chosen template.
              responses:
                  200:
                      body:
                        application/json:
                          schema: jasperTemplateDto
                  404:
                      body:
                        application/json:
                            schema: localizedMessage
          put:
              is: [ secured ]
              description: Update existing template.
              body:
                  application/json:
                    schema: jasperTemplateDto
              responses:
                  200:
                      body:
                        application/json:
                          schema: jasperTemplateDto

  /requisitionTemplates:
      displayName: Requisition Template
      get:
          is: [ secured ]
          description: Get all requisitionTemplates.
          responses:
              "200":
                  body:
                    application/json:
                        schema: requisitionTemplateArray
              "404":
      post:
          is: [ secured ]
          description: Creates new requisitionTemplate.
          body:
              application/json:
                schema: requisitionTemplate
          responses:
              "201":
                  body:
                    application/json:
                        schema: requisitionTemplate
              "400":
                  body:
                    application/json:
              "403":
                  body:
                    application/json:
                        schema: localizedMessage
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: Delete chosen requisitionTemplate.
              responses:
                  "204":
                  "403":
                      body:
                        application/json:
                            schema: localizedMessage
                  "404":
                      body:
                        application/json:
                            schema: localizedMessage
                  "409":
          get:
              is: [ secured ]
              description: Get chosen requisitionTemplate.
              responses:
                  "200":
                      body:
                        application/json:
                            schema: requisitionTemplate
                  "404":
                      body:
                        application/json:
                            schema: localizedMessage
          put:
              is: [ secured ]
              description: Update existing requisitionTemplate.
              body:
                  application/json:
                    schema: requisitionTemplate
              responses:
                  "200":
                      body:
                        application/json:
                            schema: requisitionTemplate
                  "400":
                      body:
                        application/json:
                  "403":
                      body:
                        application/json:
                            schema: localizedMessage
      /search:
          get:
              is: [ secured ]
              description: Find requisition templates with matched parameters.
              queryParameters:
                  program:
                      displayName: program
                      description: program ID
                      type: string
                      required: false
                      repeat: false
              responses:
                  "200":
                      body:
                        application/json:
                            schema: requisitionTemplateArray
                  "404":
                  "500":
  /settings:
      displayName: Settings.
      /{key}:
            uriParameters:
              key:
                  displayName: key
                  type: string
                  required: true
                  repeat: false
            get:
               is: [ secured ]
               description: Get chosen setting.
               responses:
                   "200":
                       body:
                           application/json:
                   "404":
                       body:
                         application/json:
